diff --git a/Makefile.am b/Makefile.am
index f6d194d..f9fa9f9 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -30,6 +30,9 @@ if ARCH_PPC
 minerd_SOURCES += sha2-ppc.S scrypt-ppc.S
 endif
 endif
+if ARCH_E2K
+minerd_SOURCES += sha2-e2k.c
+endif
 minerd_LDFLAGS	= $(PTHREAD_FLAGS)
 minerd_LDADD	= @LIBCURL@ @JANSSON_LIBS@ @PTHREAD_LIBS@ @WS2_LIBS@
 minerd_CFLAGS	= -fno-strict-aliasing
diff --git a/configure.ac b/configure.ac
index 74b4c10..1bcb711 100644
--- a/configure.ac
+++ b/configure.ac
@@ -51,6 +51,9 @@ case $target in
   powerpc*-*-*)
     have_ppc=true
     ;;
+  e2k-*)
+    have_e2k=true
+    ;;
 esac
 
 PTHREAD_FLAGS="-pthread"
@@ -112,6 +115,7 @@ AM_CONDITIONAL([ARCH_x86], [test x$have_x86 = xtrue])
 AM_CONDITIONAL([ARCH_x86_64], [test x$have_x86_64 = xtrue])
 AM_CONDITIONAL([ARCH_ARM], [test x$have_arm = xtrue])
 AM_CONDITIONAL([ARCH_PPC], [test x$have_ppc = xtrue])
+AM_CONDITIONAL([ARCH_E2K], [test x$have_e2k = xtrue])
 
 if test x$request_jansson = xtrue
 then
diff --git a/miner.h b/miner.h
index 3f9b2f4..32369d6 100644
--- a/miner.h
+++ b/miner.h
@@ -151,6 +151,13 @@ void sha256_transform_8way(uint32_t *state, const uint32_t *block, int swap);
 #endif
 #endif
 
+#ifdef __e2k__
+#define HAVE_SHA256_4WAY 1
+int sha256_use_4way();
+void sha256_init_4way(uint32_t *state);
+void sha256_transform_4way(uint32_t *state, const uint32_t *block, int swap);
+#endif
+
 extern int scanhash_sha256d(int thr_id, uint32_t *pdata,
 	const uint32_t *ptarget, uint32_t max_nonce, unsigned long *hashes_done);
 
diff --git a/sha2.c b/sha2.c
index 9447abb..ffba7b3 100644
--- a/sha2.c
+++ b/sha2.c
@@ -20,6 +20,10 @@
 	 (defined(__powerpc__) || defined(__ppc__) || defined(__PPC__)))
 #define EXTERN_SHA256
 #endif
+#ifdef __e2k__
+//#define EXTERN_SHA256
+#endif
+
 
 static const uint32_t sha256_h[8] = {
 	0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
@@ -601,9 +605,12 @@ int scanhash_sha256d(int thr_id, uint32_t *pdata, const uint32_t *ptarget,
 			max_nonce, hashes_done);
 #endif
 #ifdef HAVE_SHA256_4WAY
-	if (sha256_use_4way())
-		return scanhash_sha256d_4way(thr_id, pdata, ptarget,
-			max_nonce, hashes_done);
+	//if (sha256_use_4way())
+	//	return scanhash_sha256d_4way(thr_id, pdata, ptarget,
+	//		max_nonce, hashes_done);
+#endif
+#ifdef __e2k__
+    return scanhash_sha256d_4way(thr_id, pdata, ptarget, max_nonce, hashes_done);
 #endif
 	
 	memcpy(data, pdata + 16, 64);
